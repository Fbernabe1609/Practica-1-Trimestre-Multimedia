// Generated by view binder compiler. Do not edit!
package com.example.practica_1_trimestre_multimedia.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.practica_1_trimestre_multimedia.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentSettingsBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button changeEmailButton;

  @NonNull
  public final Button changePasswordButton;

  @NonNull
  public final Button deleteAccountButton;

  @NonNull
  public final Button showButton;

  private FragmentSettingsBinding(@NonNull ConstraintLayout rootView,
      @NonNull Button changeEmailButton, @NonNull Button changePasswordButton,
      @NonNull Button deleteAccountButton, @NonNull Button showButton) {
    this.rootView = rootView;
    this.changeEmailButton = changeEmailButton;
    this.changePasswordButton = changePasswordButton;
    this.deleteAccountButton = deleteAccountButton;
    this.showButton = showButton;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentSettingsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentSettingsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_settings, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentSettingsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.changeEmailButton;
      Button changeEmailButton = ViewBindings.findChildViewById(rootView, id);
      if (changeEmailButton == null) {
        break missingId;
      }

      id = R.id.changePasswordButton;
      Button changePasswordButton = ViewBindings.findChildViewById(rootView, id);
      if (changePasswordButton == null) {
        break missingId;
      }

      id = R.id.deleteAccountButton;
      Button deleteAccountButton = ViewBindings.findChildViewById(rootView, id);
      if (deleteAccountButton == null) {
        break missingId;
      }

      id = R.id.showButton;
      Button showButton = ViewBindings.findChildViewById(rootView, id);
      if (showButton == null) {
        break missingId;
      }

      return new FragmentSettingsBinding((ConstraintLayout) rootView, changeEmailButton,
          changePasswordButton, deleteAccountButton, showButton);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
